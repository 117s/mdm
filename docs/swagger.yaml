definitions:
  dto.CreateDataModelDraftRequest:
    properties:
      identifier:
        type: string
      name:
        type: string
      tenantId:
        type: string
    required:
    - identifier
    - name
    - tenantId
    type: object
  dto.CreateTenantRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.ErrorResponse:
    properties:
      code:
        type: string
      details: {}
      message:
        type: string
    type: object
  dto.PaginationMetadata:
    properties:
      hasNext:
        type: boolean
      limit:
        type: integer
      skip:
        type: integer
      total:
        type: integer
    type: object
  dto.PaginationResult:
    properties:
      metadata:
        $ref: '#/definitions/dto.PaginationMetadata'
      results: {}
    type: object
  schema.DataModel:
    properties:
      createdAt:
        type: integer
      id:
        type: string
      identifier:
        type: string
      isDraft:
        type: boolean
      name:
        type: string
      properties:
        items:
          $ref: '#/definitions/schema.Property'
        type: array
      tableName:
        type: string
      tenant:
        $ref: '#/definitions/schema.Tenant'
      tenantId:
        type: string
      updatedAt:
        type: integer
    required:
    - id
    - identifier
    - name
    - properties
    - tenantId
    type: object
  schema.Property:
    properties:
      comments:
        type: string
      dataModelId:
        type: string
      id:
        description: |-
          ID is used to identify this property, which will be used as the name of this column
          should follow pattern ^[a-z_][a-z0-9_]*$
          ID should have a max length of 64
        type: string
      name:
        description: Name is used for business observers
        type: string
      options:
        additionalProperties: true
        type: object
      optionsStr:
        type: string
      required:
        type: boolean
      type:
        description: |-
          Type can be any of "string", "text", "number", "boolean", "date"
          string must have a max length, while text does not require this
          string => VARCHAR
          text => TEXT
        type: string
    required:
    - dataModelId
    - id
    - name
    - required
    - type
    type: object
  schema.Tenant:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/data-model:
    get:
      consumes:
      - application/json
      description: List all `DataModel`s
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/dto.PaginationResult'
            - properties:
                results:
                  items:
                    $ref: '#/definitions/schema.DataModel'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List all DataModel
      tags:
      - DataModel
  /api/v1/data-model-draft:
    post:
      consumes:
      - application/json
      description: Create a new `DataModel`, start with a draft mode, need to be published
        before CRUD data
      parameters:
      - description: create data model request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CreateDataModelDraftRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.DataModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new `DataModel`
      tags:
      - DataModelDraft
  /api/v1/data-model-draft/{id}/editing:
    post:
      consumes:
      - application/json
      description: marks this `DataModelDraft` is being edited by someone, thus can
        not be updated by anyone else.
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: marks a data model is being editing
      tags:
      - DataModelDraft
  /api/v1/data-model/{id}:
    get:
      consumes:
      - application/json
      description: Get a DataModel details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.DataModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a DataModel details
      tags:
      - DataModel
  /api/v1/tenant:
    post:
      consumes:
      - application/json
      description: Create a new `Tenant`
      parameters:
      - description: create new tenant request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTenantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.Tenant'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new Tenant
      tags:
      - Tenant
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
